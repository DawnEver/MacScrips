#!/bin/zsh
#functions
function help(){
    if [ $# = 0 ];then # quickopen help
        echo "====help===="
        echo $help
    elif [ $# = 1 ];then
        # echo 'wait for seconds'
        if [[ $1 =~ .*/.* ]];then # quickopen help [targetPath]
            echo "searching quickopen for targetPath #"$1"#"
            echo '====result===='
            find /usr/local/bin -name 'o-*'  | xargs grep -H -l "targetPath='"$1"'"
            if [ $? = 1 ];then
                echo "Error:quickopen to targetPath #"$1"# not found"
                return
            fi
        else # quickopen help o-[shotcut]
            echo "searching help for quickopen #"$1"#"
            echo '====result===='
            find /usr/local/bin -name $1 | xargs grep  "targetPath="
            e=$?
            find /usr/local/bin -name o-$1 | xargs grep  "targetPath="
            e+=$? 
            if [ $e == 0 ];then
                echo "Error:quickopen #"$1"# not found"
            fi
        fi
    fi
}

function list(){ # quickopen list
    echo '====quickopenList===='
    # echo $quickopenList
    find /usr/local/bin -name 'o-*' -exec basename {} \;

    echo '====tips===='
    echo "input 'quickopen help o-[quickopen]' or 'quickopen help o-[quickopen]' for targetPath."
}

function new(){ # quickopen new [shotcut] [targetPath]
    if [[ $1 = 'new' || $1 = 'del' || $1 = 'delete' || $1 = 'list' || $1 = 'help' || $1 = 'version' || $1 = 'all' ]];then
       echo "Error:quickopen name conflict"
        echo "=====reserved words====="
        echo "help
        new
        all
        version
        del
        delete
        o-*   (wor d prefixed with 'o-')"
    else
        if [ -e '/usr/local/bin/o'-$1 ]; then
            echo 'Warning : quickopen #'$1'# has existed,do you want to replace it?(Y/N)'
            read e
            if [[ $e != Y && $e != y ]];then
                echo 'Warning:command cancelled'
                return
            fi
        fi

        find /usr/local/bin -name  'o-*' | xargs grep -H -l "targetPath='"$2"'"
        e=$?
        if [[ $e = 0 && $listLenth > 0 ]];then
            echo 'Warning : targetPath #'$2'# has been included in quikopen above,do you want to repeat?(Y/N)'
            read e
            if [[ $e != Y && $e != y ]];then
                echo 'Warning:command cancelled'
                return
            fi
        fi

        echo '#!/bin/sh' > '/usr/local/bin/o-'$1
        echo "targetPath='"$2"'" >> "/usr/local/bin/o-"$1
        echo "echo targetPath = "$2 >> "/usr/local/bin/o-"$1
        # echo 'open ~/.quickopen/alias/o-'$1 >> '/usr/local/bin/o-'$1
        echo 'open $targetPath' >> '/usr/local/bin/o-'$1
        # ln -s $2 ~/.quickopen/alias/o-$1
        # mv ~/.quickopen/o-$1 ~/.quickopen/alias/o-$1
        # osascript -e 'tell application "Finder" to make alias file to POSIX file "/Users/dawnever/MyFile/Develop/Shell/MacScripts/readme.md" at POSIX file "~/.quickopen/alias/o-$shell"'


        chmod 755 '/usr/local/bin/o-'$1
        echo 'Suceed:create new quickopen #'$1'#'
    fi
}

function delete(){ 
    target=$1
    all=0

    if [ $target = 'all' ];then
        all=1
        hit=1
        # rm -f -r ~/.quickopen/alias
        # mkdir ~/.quickopen/alias
    fi

    # traversal to delete
    for quickopen in $quickopenList
    do
        if [ $all = 1 ];then # quickopen del all
            rm '/usr/local/bin/'$quickopen
        else
            if [ $quickopen = $target ];then # quickopen del o-[shotcut]
                hit=1
                rm '/usr/local/bin/'$target
                # rm -f '~/.quickopen/alias/'$target
            elif [ $quickopen = o-$target ];then # quickopen del [shotcut]
                hit=1
                rm '/usr/local/bin/o-'$target
                # rm -f '~/.quickopen/alias/o-'$target
            fi
        fi
    done

    # output
    if [ $hit = 0 ];then
        echo 'Error:quickopen #'$target'# not found'
    else
        echo 'Suceed:delete quickopen #'$target'#'
    fi
}

function open(){ 
    target=$1
    # traversal to open
    for quickopen in $quickopenList
    do
        if [ $quickopen = $target ];then # quickopen o-[shotcut]
            hit=1
            echo 'Suceed:open quickopen #'$target'#'
            chmod 755 '/usr/local/bin/'$target
            sh '/usr/local/bin/'$target
        elif [ $quickopen = o-$target ];then # quickopen [shotcut]
            hit=1
            echo 'Suceed:open quickopen #'$target'#'
            chmod 755 '/usr/local/bin/o-'$target
            sh '/usr/local/bin/o-'$target
        fi
    done

    # output
    if [ $hit = 0 ];then
        echo 'Error:quickopen #'$target'# not found'
    fi
}

function version(){ # 'quickopen version'
    echo '====version===='
    echo $version
}

# ===main===
#init variables
quickopenList=()
listLenth=0
hit=0
version='1.0.0'
help='**create a new quickopen**
quickopen new [shotcut] [targetPath] (targetPath should be absolute path)

**quickopen**
quickopen [shotcut]
quickopen o-[shotcut]
o-[shotcut]
> o-[shotcut] : quickcut with a prefex "o-" 

**delete**
*delete a quickopen
quickopen del o-[shotcut]
quickopen delete o-[shotcut]
quickopen del [shotcut]
quickopen delete [shotcut]
*delete all quickopens
quickopen del all

**help**
*show a quickopen absolute path 
quickopen help o-[shotcut]
quickopen help [shotcut]
*search quickopen according to absolute path 
quickopen help [targetPath]
*show help
quickopen help

**list**
quickopen list

**version**
quickopen version'

# get quickopen list
quickopenList=($(find /usr/local/bin -name "o-*" -exec basename {} \;))
listLenth=${#quickopenList}

# execute commands according to input
echo "======="
if [ $# = 0 ];then
    help
elif [ $# = 1 ];then
    if [ $1 = 'help' ];then
        help
    elif [ $1 = 'version' ];then
        version
    elif [ $1 = 'list' ];then
        list
    else
       open $1
    fi
elif [ $# = 2 ];then
    if [[ $1 = 'del' || $1 = 'delete' ]];then
        delete $2
    elif [ $1 = 'help' ];then
        help $2
    else
        echo "Error:command not found"
    fi
elif [ $# = 3 ];then
    if [ $1 = 'new' ];then
        new $2 $3
    fi
else
    echo "Error:command not found"
    echo "input 'quickopen help' for help"
fi
echo "======"
exit
